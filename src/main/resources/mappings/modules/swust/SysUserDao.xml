<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mht.modules.swust.dao.SysUserDao">
  <resultMap id="BaseResultMap" type="com.mht.modules.sys.entity.User">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="office_id" jdbcType="VARCHAR" property="officeId" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="no" jdbcType="VARCHAR" property="no" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="user_type" jdbcType="CHAR" property="userType" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_date" jdbcType="TIMESTAMP" property="loginDate" />
    <result column="login_flag" jdbcType="VARCHAR" property="loginFlag" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
    <result column="qrcode" jdbcType="VARCHAR" property="qrCode" />
    <result column="sign" jdbcType="VARCHAR" property="sign" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="id_no" jdbcType="VARCHAR" property="idNo" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="nation" jdbcType="CHAR" property="nation" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <association javaType="com.mht.modules.sys.entity.Office" property="company" >
    	<result column="id" jdbcType="VARCHAR" property="id" />
    	<result column="company_id" property="id" />
    </association>
    <association javaType="com.mht.modules.sys.entity.Office" property="office" >
    	<result column="id" jdbcType="VARCHAR" property="id" />
    	<result column="office_id" property="id" />
    </association>
    <association javaType="com.mht.modules.sys.entity.User" property="createBy" >
   		 <result column="id" jdbcType="VARCHAR" property="id" />
    	<result column="create_by" property="id" />
    </association>
    <association javaType="com.mht.modules.sys.entity.User" property="updateBy" >
    	<result column="id" jdbcType="VARCHAR" property="id" />
    	<result column="update_by" property="id" />
    </association>
  </resultMap>
  
      <sql id="userColumns">
    	a.id,
    	a.company_id AS "company.id",
    	a.office_id AS "office.id",
    	a.login_name,
    	a.id_no,
    	a.account,
    	a.gender,
    	a.nation,
    	a.password,
    	a.no,
		a.name,
		a.email,
		a.phone,
		a.mobile,
		a.user_type,
		a.login_ip,
		a.login_date,
		a.remarks,
		a.login_flag,
		a.role_type,
		a.photo,
		a.qrcode,
		a.sign,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS "updateBy.id",
		a.update_date,
		a.del_flag,
    	c.name AS "company.name",
    	c.parent_id AS "company.parent.id",
    	c.parent_ids AS "company.parentIds",
    	ca.id AS "company.area.id",
    	ca.name AS "company.area.name",
    	ca.parent_id AS "company.area.parent.id",
    	ca.parent_ids AS "company.area.parentIds",
    	o.name AS "office.name",
    	o.useable AS "office.useable",
    	o.parent_id AS "office.parent.id",
    	o.parent_ids AS "office.parentIds",
    	oa.id AS "office.area.id",
    	oa.name AS "office.area.name",
    	oa.parent_id AS "office.area.parent.id",
    	oa.parent_ids AS "office.area.parentIds",
    	cu.id AS "company.primaryPerson.id",
    	cu.name AS "company.primaryPerson.name",
    	cu2.id AS "company.deputyPerson.id",
    	cu2.name AS "company.deputyPerson.name",
    	ou.id AS "office.primaryPerson.id",
    	ou.name AS "office.primaryPerson.name",
    	ou2.id AS "office.deputyPerson.id",
    	ou2.name AS "office.deputyPerson.name"<!-- ,
        r.id AS "roleList.id",
        r.office_id AS "roleList.office.id",
        r.name AS "roleList.name",
        r.enname AS "roleList.enname",
        r.role_type AS "roleList.roleType",
        r.data_scope AS "roleList.dataScope" -->
    </sql>
  
  
   <sql id="userJoins">
		LEFT JOIN mht_oeg.sys_office c ON c.id = a.company_id
		LEFT JOIN mht_oeg.sys_area ca ON ca.id = c.area_id
		LEFT JOIN mht_oeg.sys_office o ON o.id = a.office_id
		LEFT JOIN mht_oeg.sys_area oa ON oa.id = o.area_id
		LEFT JOIN mht_oeg.sys_user cu ON cu.id = c.primary_person
		LEFT JOIN mht_oeg.sys_user cu2 ON cu2.id = c.deputy_person
		LEFT JOIN mht_oeg.sys_user ou ON ou.id = o.primary_person
		LEFT JOIN mht_oeg.sys_user ou2 ON ou2.id = o.deputy_person<!-- 
		LEFT JOIN sys_user_role ur ON ur.user_id = a.id
        LEFT JOIN sys_role r ON r.id = ur.role_id -->
    </sql>
  
  <sql id="Base_Column_List">
    id, company_id AS "company.id", office_id AS "office.id", login_name, password, no, name, email, phone, mobile, 
    user_type, photo, login_ip, login_date, login_flag, create_by AS "createBy.id", create_date, update_by AS "updateBy.id", 
    update_date, remarks, del_flag, qrcode, sign, account, id_no, gender, nation, role_type, 
    origin, education, duty, other_duty, outside, token
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mht_oeg.sys_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="get" resultType="User">
		SELECT
			<include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM mht_oeg.sys_user a
		<include refid="userJoins"/><!-- 
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
		WHERE a.id = #{id}
	</select>
  
  	<select id="getByLoginName" resultType="User" parameterType="User">
		SELECT
			<include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM mht_oeg.sys_user a
		<include refid="userJoins"/><!-- 
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		AND (a.login_name = #{loginName} 
			<if test="idNo != null and idNo != ''">
				OR a.id_no = #{idNo}
			</if>
			<if test="no != null and no != ''">
				OR a.no = #{no}
			</if>
			<if test="email != null and email != ''">
				OR a.email = #{email}
			</if>
			<if test="mobile != null and mobile != ''">
				OR a.mobile = #{mobile}
			</if>
		)
		AND o.useable='1'
	</select>
  
  	<select id="findList" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM mht_oeg.sys_user a
		<include refid="userJoins"/>
		<if test="role != null and role.id != null and role.id != ''">
			JOIN mht_oeg.sys_user_role ur ON ur.user_id = a.id AND ur.role_id = #{role.id}
		</if>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="company != null and company.id != null and company.id != ''">
			AND (c.id = #{company.id} OR c.parent_ids LIKE 
					<if test="dbName == 'oracle'">'%,'||#{company.id}||',%')</if>
					<if test="dbName == 'mysql'">CONCAT('%,', #{company.id}, ',%'))</if>
		</if>
		<if test="office != null and office.id != null and office.id != ''">
			AND (o.id = #{office.id} OR o.parent_ids LIKE 
					<if test="dbName == 'oracle'">'%,'||#{office.id}||',%')</if>
					<if test="dbName == 'mysql'">CONCAT('%,', #{office.id}, ',%'))</if>
		</if>
		<if test="doorNum !=null and doorNum!=''">
		door_num = #{doorNum,jdbcType=VARCHAR}
		</if>
		
		<!-- 如果不是超级管理员，则不显示超级管理员用户 -->
		<if test="!currentUser.admin">
			AND a.id != '1'
		</if>
		<if test="loginName != null and loginName != ''">
			AND a.login_name like 
					<if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name like 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY c.code, o.code, a.name
			</otherwise>
		</choose>
	</select>
  
  	<select id="findListByOffice" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM mht_oeg.sys_user a
		<include refid="userJoins"/>

		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="company != null and company.id != null and company.id != ''">
			AND c.id = #{company.id} 
		</if>
		<if test="office != null and office.id != null and office.id != ''">
			AND o.id = #{office.id} 
		</if>
		<if test="office == null">
			AND (o.id = ''  or o.id is null)
		</if>
		
		<if test="loginName != null and loginName != ''">
			AND a.login_name like 
					<if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name like 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>
		<!-- 数据范围过滤 ${sqlMap.dsf}-->
		
		<!-- 排序 -->
		ORDER BY  a.name
	
	</select>
  <select id="findUserByOfficeId" resultType="User" useCache="true">
		SELECT
			a.id, a.name, a.login_name
		FROM mht_oeg.sys_user a
		LEFT JOIN mht_oeg.sys_user_office su ON su.user_id = a.id
		LEFT JOIN mht_oeg.sys_office so ON so.id = su.office_id
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="office != null and office.id != null and office.id != ''">
			AND (so.id = #{office.id} OR so.parent_ids LIKE 
					<if test="dbName == 'oracle'">'%,'||#{office.id}||',%')</if>
					<if test="dbName == 'mysql'">CONCAT('%,', #{office.id}, ',%'))</if>
		</if>
		<!-- AND a.office_id = #{office.id} -->
		ORDER BY a.name
	</select>
	
	<!-- 查询全部用户 -->
	<select id="findAllList" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM mht_oeg.sys_user a
		<include refid="userJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY c.code, o.code, a.name
	</select>
	
	<!-- 查询全部用户数目 -->
	<select id="findAllCount" resultType="long">
		SELECT
			COUNT(1)
		FROM mht_oeg.sys_user a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
	
	<select id="findUserByNoOrIdNo" resultType="User">
		SELECT 
			id
		FROM mht_oeg.sys_user a
		WHERE 1=1
		<if test="idNo != null and idNo != ''">
			AND a.id_no = #{idNo}
		</if>
		<if test="no != null and no != ''">
			AND a.no = #{no}
		</if>
	</select>
  
  <delete id="deleteUserRole">
		DELETE FROM mht_oeg.sys_user_role WHERE user_id = #{id}
	</delete>
	
	<!-- 插入用户和角色关联表数据 -->
	<insert id="insertUserRole">
		INSERT INTO mht_oeg.sys_user_role(user_id, role_id)
		<foreach collection="roleList" item="role" separator=" union all ">
			SELECT #{id}, #{role.id} FROM dual
		</foreach>
	</insert>
	
	<!-- 更新用户信息  -->
	<update id="updateUserInfo">
		UPDATE mht_oeg.sys_user SET 
			name = #{name},
			email = #{email}, 
			phone = #{phone}, 
			mobile = #{mobile}, 
			id_no = #{idNo},
    		account	= #{account},
    		gender = #{gender},
    		nation = #{nation},
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			remarks = #{remarks},
			photo = #{photo},
			qrcode = #{qrCode},
			sign = #{sign}
		WHERE id = #{id}
	</update>
	
	<!-- 更新用户密码 -->
	<update id="updatePasswordById">
		UPDATE mht_oeg.sys_user SET 
			password = #{password} 
		WHERE id = #{id}
	</update>
	
	<!-- 更新登录信息，如登录IP、登录时间 -->
	<update id="updateLoginInfo">
		UPDATE mht_oeg.sys_user SET 
			login_ip = #{loginIp}, 
			login_Date = #{loginDate},
			token = #{token} 
		WHERE id = #{id}
	</update>
	
	<!-- 物理删除用户 -->
	<update id="delete">
		DELETE FROM mht_oeg.sys_user 
		WHERE id = #{id}
	</update>
	
	<!-- 逻辑删除用户 -->
	<update id="deleteByLogic">
		UPDATE mht_oeg.sys_user SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty"  resultType="User" statementType="STATEMENT">
		select * from mht_oeg.sys_user where ${propertyName} = '${value}'
	</select>
	<!-- 添加好友 -->
	<insert id="insertFriend">
		INSERT INTO mht_oeg.sys_user_friend(
			id, 
			userId, 
			friendId
		) VALUES (
			#{id}, 
			#{userId}, 
			#{friendId}
		)
	</insert>
	
	<!-- 根据用户id和好友id获取唯一记录 -->
	<select id="findFriend" resultType="User">
		SELECT
			*
		FROM mht_oeg.sys_user a
		LEFT JOIN mht_oeg.sys_user_friend p ON p.userId = a.id
		WHERE p.userId = #{userId} and p.friendId = #{friendId}
	</select>
	
	<!-- 删除好友 -->
	<select id="deleteFriend">
		DELETE FROM mht_oeg.sys_user_friend  WHERE userId = #{userId} and friendId = #{friendId}
	</select>
	
		<!-- 查询我的好友列表 -->
	<select id="findFriends"  resultType="User">
		SELECT
			<include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM mht_oeg.sys_user a
		<include refid="userJoins"/>
		LEFT JOIN mht_oeg.sys_user_friend p ON p.friendId = a.id
		WHERE  p.userId = #{id}
	</select>
	
		<!-- 根据条件检索用户，添加到好友列表 -->
	<select id="searchUsers"  resultType="User">
		SELECT
			<include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM mht_oeg.sys_user a
	  	<include refid="userJoins"/>
		<if test="name != null and name != ''">
			WHERE  a.name like 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>
	</select>
	
	<select id="getTypeUser" resultType="User" statementType="STATEMENT">
		SELECT
			a.id,
	    	a.company_id AS "company.id",
	    	a.office_id AS "office.id",
	    	a.login_name,
	    	a.id_no,
	    	a.account,
	    	a.gender,
	    	a.nation,
	    	a.password,
	    	a.no,
			a.name,
			a.email,
			a.phone,
			a.mobile,
			a.user_type,
			a.login_ip,
			a.login_date,
			a.remarks,
			a.login_flag,
			a.photo,
			a.qrcode,
			a.sign,
			a.create_by AS "createBy.id",
			a.create_date,
			a.update_by AS "updateBy.id",
			a.update_date,
			a.del_flag
		FROM mht_oeg.sys_user a
		where 1=1 
		AND a.del_flag = '0'
		AND 
		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
         	${item}='${value}'
     	</foreach>
	</select>
  
  
  
  
  
  
  
  
  
  <select id="SelectByAcount" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mht_oeg.sys_user
    where account = #{account}
  </select>
<!--   <select id="findList" resultMap="BaseResultMap"> -->
<!--     select  -->
<!--     <include refid="Base_Column_List" /> -->
<!--     from mht_oeg.sys_user -->
<!--     where door_num = #{doorNum,jdbcType=VARCHAR} -->
<!--   </select> -->
  
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from mht_oeg.sys_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.mht.modules.sys.entity.User">
    insert into mht_oeg.sys_user (id, company_id, office_id, 
      login_name, password, no, 
      name, email, phone, 
      mobile, user_type, photo, 
      login_ip, login_date, login_flag, 
      create_by, create_date, update_by, 
      update_date, remarks, del_flag, 
      qrcode, sign, account, 
      id_no, gender, nation, role_type, 
       token
       )
    values (#{id,jdbcType=VARCHAR}, #{company.id,jdbcType=VARCHAR}, #{office.id,jdbcType=VARCHAR}, 
      #{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{no,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{userType,jdbcType=CHAR}, #{photo,jdbcType=VARCHAR}, 
      #{loginIp,jdbcType=VARCHAR}, #{loginDate,jdbcType=TIMESTAMP}, #{loginFlag,jdbcType=VARCHAR}, 
      #{createBy.id,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateBy.id,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, #{delFlag,jdbcType=CHAR}, 
      #{qrCode,jdbcType=VARCHAR}, #{sign,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, 
      #{idNo,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, #{nation,jdbcType=CHAR}, #{roleType,jdbcType=VARCHAR}, 
      #{token,jdbcType=VARCHAR}
      )
  </insert>

  <update id="update" parameterType="com.mht.modules.sys.entity.User">
    update mht_oeg.sys_user
    <set>
      <if test="company != null and company.id!=null">
        company_id = #{company.id,jdbcType=VARCHAR},
      </if>
      <if test="office != null and office.id!=''">
        office_id = #{office.id,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="no != null">
        no = #{no,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=CHAR},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null">
        login_date = #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginFlag != null">
        login_flag = #{loginFlag,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy.id,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy.id,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
      <if test="qrCode != null">
        qrcode = #{qrCode,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="idNo != null">
        id_no = #{idNo,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=CHAR},
      </if>
      
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>				
  <update id="updateByPrimaryKey" parameterType="com.mht.modules.sys.entity.User">
    update mht_oeg.sys_user
    set company_id = #{company.id,jdbcType=VARCHAR},
      office_id = #{office.id,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      no = #{no,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=CHAR},
      photo = #{photo,jdbcType=VARCHAR},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_date = #{loginDate,jdbcType=TIMESTAMP},
      login_flag = #{loginFlag,jdbcType=VARCHAR},
      create_by = #{createBy.id,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy.id,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=CHAR},
      qrcode = #{qrCode,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      id_no = #{idNo,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      nation = #{nation,jdbcType=CHAR},
      token = #{token,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateMobile" parameterType="com.mht.modules.sys.entity.User">
    update mht_oeg.sms_send_mobile
    set 
      mobile = #{mobile,jdbcType=VARCHAR}
    where id = '1'
  </update>
</mapper>